C51 COMPILER V8.05a   DATASCOPE_DP                                                         08/08/2017 18:21:31 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE DATASCOPE_DP
OBJECT MODULE PLACED IN .\DataScope_DP.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\SOFTWARE\TASK\COMMON_SOFTWARE\DATA_SCOPE\DataScope_DP.c LARGE WARNING
                    -LEVEL(0) BROWSE DEBUG OBJECTEXTEND PRINT(.\DataScope_DP.lst) TABS(2) OBJECT(.\DataScope_DP.obj)

line level    source

   1          /************************************************************
   2          * 组织名称： 电子大赛小组
   3          * 文件名称: DataScope_DP.c
   4          * 作者:  未知
   5          * 版本 :1.1
   6          * 日期:
   7          * 主要功能 :
   8          * 向上位机发送数据的文件
   9          * 历史修改记录: // 历史修改记录
  10          * <作者> <时间> <版本 > <描述>
  11          ***********************************************************/
  12          /***************串口示波器驱动代码************************/
  13          #include "DataScope_DP.h"
  14          #include "../../../HARDWARE/BSP/USART1.h"
  15          #define DATA_SCOPE
  16          #ifdef DATA_SCOPE
  17          
  18          unsigned char DataScope_OutPut_Buffer[42] = {0};       //串口发送缓冲区
  19          //函数说明：将单精度浮点数据转成4字节数据并存入指定地址
  20          //附加说明：用户无需直接操作此函数
  21          //target:目标单精度数据
  22          //buf:待写入数组
  23          //beg:指定从数组第几个元素开始写入
  24          //函数无返回
  25          //对此函数进行了修改，原本是有问题的，后来发现point数组的顺序反了，现在能正常使用了
  26           void Float2Byte(float *target,unsigned char *buf,unsigned char beg)
  27          {
  28   1        unsigned char *point;
  29   1        point = (unsigned char*)target;   //得到float的地址
  30   1        buf[beg]   = point[3];
  31   1        buf[beg+1] = point[2];
  32   1        buf[beg+2] = point[1];
  33   1        buf[beg+3] = point[0];
  34   1      }
  35           /*************************************************
  36           * 函数名称:
  37           * 描述:
  38           * 输入:
  39           * 输出:
  40           * 返回值:
  41           * 其他说明:
  42           *************************************************/
  43           void sendScopeData( u8 channe_num)
  44           {
  45   1         u8 a; //
  46   1      
  47   1      
  48   1         for (a = 0; a < DataScope_Data_Generate(channe_num); a++)
  49   1         {
  50   2           TX1_write2buff(DataScope_OutPut_Buffer[a]); //发送一通道数据到串口示波器
  51   2         }
  52   1      
  53   1       }
  54          
C51 COMPILER V8.05a   DATASCOPE_DP                                                         08/08/2017 18:21:31 PAGE 2   

  55          //函数说明：将待发送通道的单精度浮点数据写入发送缓冲区
  56          //Data：通道数据
  57          //Channel：选择通道（1-10）
  58          //函数无返回
  59          void DataScope_Get_Channel_Data(float Data,unsigned char Channel)
  60          {
  61   1        if ( (Channel > 10) || (Channel == 0) )
  62   1          {
  63   2            return;    //通道个数大于10或等于0，直接跳出，不执行函数
  64   2          }
  65   1        else
  66   1          {
  67   2            switch (Channel)
  68   2              {
  69   3                case 1:
  70   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,1);
  71   3                  break;
  72   3                case 2:
  73   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,5);
  74   3                  break;
  75   3                case 3:
  76   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,9);
  77   3                  break;
  78   3                case 4:
  79   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,13);
  80   3                  break;
  81   3                case 5:
  82   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,17);
  83   3                  break;
  84   3                case 6:
  85   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,21);
  86   3                  break;
  87   3                case 7:
  88   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,25);
  89   3                  break;
  90   3                case 8:
  91   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,29);
  92   3                  break;
  93   3                case 9:
  94   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,33);
  95   3                  break;
  96   3                case 10:
  97   3                  Float2Byte(&Data,DataScope_OutPut_Buffer,37);
  98   3                  break;
  99   3              }
 100   2          }
 101   1      }
 102          //函数说明：生成 DataScopeV1.0 能正确识别的帧格式
 103          //Channel_Number，需要发送的通道个数
 104          //返回发送缓冲区数据个数
 105          //返回0表示帧格式生成失败
 106          unsigned char DataScope_Data_Generate(unsigned char Channel_Number)
 107          {
 108   1        if ( (Channel_Number > 10) || (Channel_Number == 0) )
 109   1          {
 110   2            return 0;    //通道个数大于10或等于0，直接跳出，不执行函数
 111   2          }
 112   1        else
 113   1          {
 114   2            DataScope_OutPut_Buffer[0] = '$';  //帧头
 115   2            switch(Channel_Number)
 116   2              {
C51 COMPILER V8.05a   DATASCOPE_DP                                                         08/08/2017 18:21:31 PAGE 3   

 117   3                case 1:
 118   3                  DataScope_OutPut_Buffer[5]  =  5;
 119   3                  return  6;
 120   3                  break;
 121   3                case 2:
 122   3                  DataScope_OutPut_Buffer[9]  =  9;
 123   3                  return 10;
 124   3                  break;
 125   3                case 3:
 126   3                  DataScope_OutPut_Buffer[13] = 13;
 127   3                  return 14;
 128   3                  break;
 129   3                case 4:
 130   3                  DataScope_OutPut_Buffer[17] = 17;
 131   3                  return 18;
 132   3                  break;
 133   3                case 5:
 134   3                  DataScope_OutPut_Buffer[21] = 21;
 135   3                  return 22;
 136   3                  break;
 137   3                case 6:
 138   3                  DataScope_OutPut_Buffer[25] = 25;
 139   3                  return 26;
 140   3                  break;
 141   3                case 7:
 142   3                  DataScope_OutPut_Buffer[29] = 29;
 143   3                  return 30;
 144   3                  break;
 145   3                case 8:
 146   3                  DataScope_OutPut_Buffer[33] = 33;
 147   3                  return 34;
 148   3                  break;
 149   3                case 9:
 150   3                  DataScope_OutPut_Buffer[37] = 37;
 151   3                  return 38;
 152   3                  break;
 153   3                case 10:
 154   3                  DataScope_OutPut_Buffer[41] = 41;
 155   3                  return 42;
 156   3                  break;
 157   3              }
 158   2          }
 159   1        return 0;
 160   1      }
 161          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    692    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     42      17
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
