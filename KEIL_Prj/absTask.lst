C51 COMPILER V8.05a   ABSTASK                                                              08/09/2017 11:17:59 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE ABSTASK
OBJECT MODULE PLACED IN .\absTask.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\SOFTWARE\absTask.c LARGE WARNINGLEVEL(0) BROWSE DEBUG OBJECTEXTEND PR
                    -INT(.\absTask.lst) TABS(2) OBJECT(.\absTask.obj)

line level    source

   1          #include <stdlib.h>
   2          #include "TASK/task.h"
   3          #define TEMPERATURE_UPDATE  15 
   4          #define BUTTON_SCAN 14
   5          #define TIME_UPDATE 13
   6          #define BUTTON_SOUND 12
   7          void taskStart() _task_ 0
   8          {
   9   1        setup();
  10   1        blink(3);
  11   1        os_create_task(5);
  12   1        os_create_task(BUTTON_SCAN);
  13   1        os_create_task(BUTTON_SOUND);
  14   1        //  os_create_task(TEMPERATURE_UPDATE);
  15   1        //  os_create_task(TIME_UPDATE);
  16   1        os_delete_task(0);
  17   1      
  18   1      }
  19          void printDistance(void) _task_ 5
  20          {
  21   1        for (;;)
  22   1        {
  23   2          DataScope_Get_Channel_Data(getADS1115ConvsionData(CHANNEL_1), 1);
  24   2      
  25   2          sendScopeData(1);
  26   2          os_wait(K_TMO, 30, 0);
  27   2        }
  28   1      }
  29          void printTmp()  _task_  9
  30          {
  31   1        for (;;)
  32   1        {
  33   2          getDS18B20_Temperature(0);
  34   2          //    DataScope_Get_Channel_Data(getDS18B20_Temperature(0));
  35   2          //    sendScopeData(1);
  36   2          os_wait(K_TMO, 30, 0);
  37   2        }
  38   1      }
  39          void Distance(void)  _task_ 10
  40          {
  41   1      #define TIME 130
  42   1      
  43   1        float value;
  44   1        float actValue;
  45   1        float Data[TIME + 1];
  46   1        float time = 0;
  47   1        float distance = 0;
  48   1      
  49   1        u8 i = 0;
  50   1        for (;;)
  51   1        {
  52   2          for (i = 0; i < TIME; i++)
  53   2          {
  54   3            updateDistance(HC_SR04_1);
C51 COMPILER V8.05a   ABSTASK                                                              08/09/2017 11:17:59 PAGE 2   

  55   3            os_wait(K_TMO, 4, 0);
  56   3            actValue = (float)getTimerValue(HC_SR04_1);//原始数据
  57   3            value = limitingFilter(actValue, 30000UL);//限幅滤波
  58   3            value = shudderingFilter(value, 300);//消抖滤波
  59   3            value = movingAverageFilter(value);//滑动平均滤波
  60   3            Data[i] = value;
  61   3          }
  62   2          Data[TIME] = filter(Data, TIME, 65535, 0);//中位值平均滤波
  63   2          time = Data[TIME] * 4.166667e-6;//公式，time的单位为ms，在24mzh下
  64   2          distance = (time * (331.4f + 0.607*getDS18B20_Temperature(0))) / 20;
  65   2          setDistance(HC_SR04_1, distance);
  66   2          DataScope_Get_Channel_Data(distance, 1);
  67   2          sendScopeData(1);
  68   2          os_wait(K_TMO, 100, 0);
  69   2      
  70   2          //for (i = 0; i < TIME; i++)
  71   2          //{
  72   2          //  updateDistance(US_016_1);
  73   2          //  os_wait(K_TMO, 4, 0);
  74   2          //  actValue = (float)getTimerValue(US_016_1);//原始数据
  75   2          //  value = limitingFilter(actValue, 30000UL);//限幅滤波
  76   2          //  value = shudderingFilter(value, 300);//消抖滤波
  77   2          //  value = movingAverageFilter(value);//滑动平均滤波
  78   2          //  Data[i] = value;
  79   2          //}
  80   2          //Data[TIME] = filter(Data, TIME, 65535, 0);//中位值平均滤波
  81   2          //distance = Data[TIME]*0.015625f;
  82   2          //setDistance(US_016_1, distance);
  83   2          //DataScope_Get_Channel_Data(distance, 1);
  84   2        //  sendScopeData(1);
  85   2          //os_wait(K_TMO, 100, 0);
  86   2      
  87   2        }
  88   1      }
  89          //时间更新进程，频率5hz
  90          void TimeUpdate(void) _task_ TIME_UPDATE
  91          {
  92   1        for (;;)
  93   1        {
  94   2      
  95   2          os_wait(K_IVL, 200, 0);
  96   2        }
  97   1      }
  98          //温度计数值更新进程，频率10hz
  99          void  TemperatureUpdata(void) _task_ TEMPERATURE_UPDATE
 100          {
 101   1        for (;;)
 102   1        {
 103   2      
 104   2      
 105   2          os_wait(K_IVL, 100, 0);
 106   2      
 107   2        }
 108   1      }
 109          //键盘按键声发出进程，频率50hz
 110          void ButtonSound(void) _task_ BUTTON_SOUND
 111          {
 112   1        for (;;)
 113   1        {
 114   2          if (getButtonNum())
 115   2          {
 116   3            buzzWait();
C51 COMPILER V8.05a   ABSTASK                                                              08/09/2017 11:17:59 PAGE 3   

 117   3          }
 118   2          os_wait(K_IVL, 20, 0);
 119   2        }
 120   1      
 121   1      }
 122          //按键扫描进程，50hz
 123          void ButtonStateUpdate(void) _task_ BUTTON_SCAN
 124          {
 125   1        for (;;)
 126   1        {
 127   2          buttonScan();
 128   2      
 129   2      
 130   2          os_wait(K_IVL, 20, 0);
 131   2      
 132   2        }
 133   1      
 134   1      }
 135          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    537    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----     541
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
